From dc10fa6aeb9b5bd3855a69d1ac40a973f9164fe9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20Rosenkr=E4nzer?= <bero@lindev.ch>
Date: Sat, 12 Jan 2013 03:58:23 +0100
Subject: [PATCH 3/3] Add r600 support
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Based on:
http://www.pcc.me.uk/pipermail/libclc-dev/2012-December/000058.html

From: Tom Stellard <thomas.stellard@amd.com>
Signed-off-by: Bernhard Rosenkränzer <bero@lindev.ch>
---
 r600/lib/OVERRIDES                   |  2 ++
 r600/lib/SOURCES                     |  4 ++++
 r600/lib/workitem/get_global_size.ll | 18 ++++++++++++++++++
 r600/lib/workitem/get_group_id.ll    | 18 ++++++++++++++++++
 r600/lib/workitem/get_local_id.ll    | 18 ++++++++++++++++++
 r600/lib/workitem/get_local_size.ll  | 18 ++++++++++++++++++
 6 files changed, 78 insertions(+)
 create mode 100644 r600/lib/OVERRIDES
 create mode 100644 r600/lib/SOURCES
 create mode 100644 r600/lib/workitem/get_global_size.ll
 create mode 100644 r600/lib/workitem/get_group_id.ll
 create mode 100644 r600/lib/workitem/get_local_id.ll
 create mode 100644 r600/lib/workitem/get_local_size.ll

diff --git a/r600/lib/OVERRIDES b/r600/lib/OVERRIDES
new file mode 100644
index 0000000..3f941d8
--- /dev/null
+++ b/r600/lib/OVERRIDES
@@ -0,0 +1,2 @@
+workitem/get_group_id.cl
+workitem/get_global_size.cl
diff --git a/r600/lib/SOURCES b/r600/lib/SOURCES
new file mode 100644
index 0000000..af8c8c8
--- /dev/null
+++ b/r600/lib/SOURCES
@@ -0,0 +1,4 @@
+workitem/get_group_id.ll
+workitem/get_local_size.ll
+workitem/get_local_id.ll
+workitem/get_global_size.ll
diff --git a/r600/lib/workitem/get_global_size.ll b/r600/lib/workitem/get_global_size.ll
new file mode 100644
index 0000000..ac2d08d
--- /dev/null
+++ b/r600/lib/workitem/get_global_size.ll
@@ -0,0 +1,18 @@
+declare i32 @llvm.r600.read.global.size.x() nounwind readnone
+declare i32 @llvm.r600.read.global.size.y() nounwind readnone
+declare i32 @llvm.r600.read.global.size.z() nounwind readnone
+
+define i32 @get_global_size(i32 %dim) nounwind readnone alwaysinline {
+  switch i32 %dim, label %default [i32 0, label %x_dim i32 1, label %y_dim i32 2, label %z_dim]
+x_dim:
+  %x = call i32 @llvm.r600.read.global.size.x() nounwind readnone
+  ret i32 %x
+y_dim:
+  %y = call i32 @llvm.r600.read.global.size.y() nounwind readnone
+  ret i32 %y
+z_dim:
+  %z = call i32 @llvm.r600.read.global.size.z() nounwind readnone
+  ret i32 %z
+default:
+  ret i32 0
+}
diff --git a/r600/lib/workitem/get_group_id.ll b/r600/lib/workitem/get_group_id.ll
new file mode 100644
index 0000000..5131648
--- /dev/null
+++ b/r600/lib/workitem/get_group_id.ll
@@ -0,0 +1,18 @@
+declare i32 @llvm.r600.read.local.size.x() nounwind readnone
+declare i32 @llvm.r600.read.local.size.y() nounwind readnone
+declare i32 @llvm.r600.read.local.size.z() nounwind readnone
+
+define i32 @get_group_id(i32 %dim) nounwind readnone alwaysinline {
+  switch i32 %dim, label %default [i32 0, label %x_dim i32 1, label %y_dim i32 2, label %z_dim]
+x_dim:
+  %x = call i32 @llvm.r600.read.local.size.x() nounwind readnone
+  ret i32 %x
+y_dim:
+  %y = call i32 @llvm.r600.read.local.size.y() nounwind readnone
+  ret i32 %y
+z_dim:
+  %z = call i32 @llvm.r600.read.local.size.z() nounwind readnone
+  ret i32 %z
+default:
+  ret i32 0
+}
diff --git a/r600/lib/workitem/get_local_id.ll b/r600/lib/workitem/get_local_id.ll
new file mode 100644
index 0000000..ac5522a
--- /dev/null
+++ b/r600/lib/workitem/get_local_id.ll
@@ -0,0 +1,18 @@
+declare i32 @llvm.r600.read.tidig.x() nounwind readnone
+declare i32 @llvm.r600.read.tidig.y() nounwind readnone
+declare i32 @llvm.r600.read.tidig.z() nounwind readnone
+
+define i32 @get_local_id(i32 %dim) nounwind readnone alwaysinline {
+  switch i32 %dim, label %default [i32 0, label %x_dim i32 1, label %y_dim i32 2, label %z_dim]
+x_dim:
+  %x = call i32 @llvm.r600.read.tidig.x() nounwind readnone
+  ret i32 %x
+y_dim:
+  %y = call i32 @llvm.r600.read.tidig.y() nounwind readnone
+  ret i32 %y
+z_dim:
+  %z = call i32 @llvm.r600.read.tidig.z() nounwind readnone
+  ret i32 %z
+default:
+  ret i32 0
+}
diff --git a/r600/lib/workitem/get_local_size.ll b/r600/lib/workitem/get_local_size.ll
new file mode 100644
index 0000000..6a71f75
--- /dev/null
+++ b/r600/lib/workitem/get_local_size.ll
@@ -0,0 +1,18 @@
+declare i32 @llvm.r600.read.tgid.x() nounwind readnone
+declare i32 @llvm.r600.read.tgid.y() nounwind readnone
+declare i32 @llvm.r600.read.tgid.z() nounwind readnone
+
+define i32 @get_local_size(i32 %dim) nounwind readnone alwaysinline {
+  switch i32 %dim, label %default [i32 0, label %x_dim i32 1, label %y_dim i32 2, label %z_dim]
+x_dim:
+  %x = call i32 @llvm.r600.read.tgid.x() nounwind readnone
+  ret i32 %x
+y_dim:
+  %y = call i32 @llvm.r600.read.tgid.y() nounwind readnone
+  ret i32 %y
+z_dim:
+  %z = call i32 @llvm.r600.read.tgid.z() nounwind readnone
+  ret i32 %z
+default:
+  ret i32 0
+}
--- libclc/configure.py.bero	2013-01-12 04:11:48.775174177 +0100
+++ libclc/configure.py	2013-01-12 04:11:53.809113106 +0100
@@ -69,7 +69,7 @@ llvm_clang = os.path.join(llvm_bindir, '
 llvm_link = os.path.join(llvm_bindir, 'llvm-link')
 llvm_opt = os.path.join(llvm_bindir, 'opt')
 
-default_targets = ['nvptx--nvidiacl', 'nvptx64--nvidiacl']
+default_targets = ['nvptx--nvidiacl', 'nvptx64--nvidiacl', 'r600--']
 
 targets = args
 if not targets:
-- 
1.7.11.3

